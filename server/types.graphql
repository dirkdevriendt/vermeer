# The following types define the data model of the example service
# based on which the GraphQL API is generated

type User @model {
  id: ID! @isUnique
  name: String
  dateOfBirth: DateTime

  # Uncomment below - you can declare relations between models like this

  # posts: [Post!]! @relation(name: "UserPosts")
}

type File @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  contentType: String
  name: String
  secret: String @isUnique
  size: Int
  url: String
}

type Image @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  title:String
  alt:String
  description: String
  imageUrl: String
  htmlDescription: Boolean @defaultValue(value:false)

  product: Product @relation(name: "ProductImages")
  productLine: ProductLine @relation(name: "ProductLineImages")
}
type Document @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  description: String
  fileUrl: String

  product: Product @relation(name: "ProductDocuments")
  productLine: ProductLine @relation(name: "ProductLineDocuments")
}

type ProductCategory @model {
  id: ID! @isUnique    # read-only (managed by Graphcool)
  createdAt: DateTime! # read-only (managed by Graphcool)
  updatedAt: DateTime! # read-only (managed by Graphcool)

  name: String!
  imageUrl: String
  chapterRef: Int!
  displayOrder:Int @defaultValue(value:100)  

  productLines: [ProductLine!]! @relation(name: "ProductCategoryProductLines")
  
  parentProductCategory:ProductCategory @relation(name: "SubProductCategories")
  childrenProductCategories:[ProductCategory!]! @relation(name: "SubProductCategories")

  productsLinked:[Product!]! @relation(name: "ProductCategoryLinkedProducts")
  productLinesLinked:[ProductLine!]! @relation(name: "ProductCategoryLinkedProductLines")

  accessoryProducts: [Product!]! @relation(name: "ProductCategoryAccessoryProducts")
  accessoryProductLines: [ProductLine!]! @relation(name: "ProductCategoryAccessoryProductLines")

  
}

type ProductLine @model {
  id: ID! @isUnique    # read-only (managed by Graphcool)
  createdAt: DateTime! # read-only (managed by Graphcool)
  updatedAt: DateTime! # read-only (managed by Graphcool)

  name: String!
  subtitle: String
  description: [String!] 
  imageUrl: String
  displayOrder:Int @defaultValue(value:100)  
  typeless: Boolean @defaultValue(value:false)
  pivotTable: Boolean @defaultValue(value:false)
  showAsProduct: Boolean @defaultValue(value:false)

  deviceOptions: [DeviceOption!]! @relation(name: "ProductLineDeviceOptions")
  images: [Image!]! @relation(name: "ProductLineImages")
  documents: [Document!]! @relation(name: "ProductLineDocuments")

  productCategory: ProductCategory @relation(name: "ProductCategoryProductLines")
  products: [Product!]! @relation(name: "ProductLineProducts")
  
  parentProductLine:ProductLine @relation(name: "SubProductLines")
  childrenProductLines:[ProductLine!]! @relation(name: "SubProductLines")

  linkedToProductCategories: [ProductCategory!]! @relation(name: "ProductCategoryLinkedProductLines")

  linkedToProductLines: [ProductLine!]! @relation(name: "ProductLineLinkedProductLines")
  productLinesLinked:[ProductLine!]! @relation(name: "ProductLineLinkedProductLines")
  
  linkedToProducts: [Product!]! @relation(name: "ProductLinkedProductLines")

  productsLinked:[Product!]! @relation(name: "ProductLineLinkedProducts")
  
  productCategoryAsAccessory: ProductCategory @relation(name: "ProductCategoryAccessoryProductLines")

  productLineAsAccessory: ProductLine @relation(name: "ProductLineAccessoryProductLines")
  accessoryProductLines: [ProductLine!]! @relation(name: "ProductLineAccessoryProductLines")

  accessoryProducts: [Product!]! @relation(name: "ProductLineAccessoryProducts")
}


type Product @model {
  id: ID! @isUnique    # read-only (managed by Graphcool)
  createdAt: DateTime! # read-only (managed by Graphcool)
  updatedAt: DateTime! # read-only (managed by Graphcool)

  name: String!
  orderNumber: String!
  type: String
  description: [String!]
  imageUrl: String
  displayOrder:Int @defaultValue(value:100)  
  showInTable: Boolean @defaultValue(value:true)
  
  properties: [Property!]! @relation(name: "ProductProperties")
  deviceOptions: [DeviceOption!]! @relation(name: "ProductDeviceOptions")
  images: [Image!]! @relation(name: "ProductImages")
  documents: [Document!]! @relation(name: "ProductDocuments")

  productLine: ProductLine @relation(name: "ProductLineProducts")
  
  linkedToProductCategories:[ProductCategory!]! @relation(name: "ProductCategoryLinkedProducts")

  linkedToProductLines:[ProductLine!]! @relation(name: "ProductLineLinkedProducts")

  productLinesLinked: [ProductLine!]! @relation(name: "ProductLinkedProductLines")

  linkedToProducts:[Product!]! @relation(name: "ProductLinkedProducts")
  productsLinked:[Product!]! @relation(name: "ProductLinkedProducts")


  productLineAsAccessory: ProductLine @relation(name: "ProductLineAccessoryProducts")
  productCategoryAsAccessory: ProductCategory @relation(name: "ProductCategoryAccessoryProducts")
  
  productAsAccessory:Product @relation(name: "ProductAccessoryProducts")
  productAccessories:[Product!]! @relation(name: "ProductAccessoryProducts")

}

type Property @model {
  id: ID! @isUnique    # read-only (managed by Graphcool)
  createdAt: DateTime! # read-only (managed by Graphcool)
  updatedAt: DateTime! # read-only (managed by Graphcool)

  name: String!
  value: String!
  minValue: String
  maxValue: String
  unit: String
  type: String @defaultValue(value:"String")
  relevantField: Boolean @defaultValue(value:true)

  product: Product @relation(name: "ProductProperties")
}

type DeviceOption @model {
  id: ID! @isUnique    # read-only (managed by Graphcool)
  createdAt: DateTime! # read-only (managed by Graphcool)
  updatedAt: DateTime! # read-only (managed by Graphcool)

  name: String!
  default: String!
  value: String
  unit: String
  values:[String!]
  
  product: Product @relation(name: "ProductDeviceOptions")
  productLine: ProductLine @relation(name: "ProductLineDeviceOptions")
}